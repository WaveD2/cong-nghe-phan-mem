version: "3.8"

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - ecommerce_network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ecommerce_network

  user-mongodb:
    image: mongo:7.0.4
    container_name: user-mongodb
    ports:
      - "27017:27017"
    volumes:
      - user-mongodb-data:/data/db
    networks:
      - ecommerce_network
    environment:
      MONGO_INITDB_DATABASE: user_db

  cart-mongodb:
    image: mongo:7.0.4
    container_name: cart-mongodb
    ports:
      - "27018:27017"
    volumes:
      - cart-mongodb-data:/data/db
    networks:
      - ecommerce_network
    environment:
      MONGO_INITDB_DATABASE: cart_db

  product-mongodb:
    image: mongo:7.0.4
    container_name: product-mongodb
    ports:
      - "27019:27017"
    volumes:
      - product-mongodb-data:/data/db
    networks:
      - ecommerce_network
    environment:
      MONGO_INITDB_DATABASE: product_db

  order-mongodb:
    image: mongo:7.0.4
    container_name: order-mongodb
    ports:
      - "27020:27017"
    volumes:
      - order-mongodb-data:/data/db
    networks:
      - ecommerce_network
    environment:
      MONGO_INITDB_DATABASE: order_db

  user-service:
    build:
      context: ./services/user-service
    container_name: user-service
    ports:
      - "7001:7001"
    depends_on:
      - kafka
      - user-mongodb
    networks:
      - ecommerce_network
    environment:
      KAFKA_BROKERS: kafka:29092
      MONGODB_URI: mongodb://user-mongodb:27017/user_db

  cart-service:
    build:
      context: ./services/cart-service
    container_name: cart-service
    ports:
      - "7003:7003"
    depends_on:
      - kafka
      - cart-mongodb
    networks:
      - ecommerce_network
    environment:
      KAFKA_BROKERS: kafka:29092
      MONGODB_URI: mongodb://cart-mongodb:27017/cart_db

  product-service:
    build:
      context: ./services/product-service
    container_name: product-service
    ports:
      - "7002:7002"
    depends_on:
      - kafka
      - product-mongodb
    networks:
      - ecommerce_network
    environment:
      KAFKA_BROKERS: kafka:29092
      MONGODB_URI: mongodb://product-mongodb:27017/product_db

  order-service:
    build:
      context: ./services/order-service
    container_name: order-service
    ports:
      - "7004:7004"
    depends_on:
      - kafka
      - order-mongodb
    networks:
      - ecommerce_network
    environment:
      KAFKA_BROKERS: kafka:29092
      MONGODB_URI: mongodb://order-mongodb:27017/order_db

  nginx:
    container_name: nginx-gateway
    build:
      context: ./services/gateway
    ports:
      - "80:80"
    depends_on:
      - user-service
      - cart-service
      - product-service
      - order-service
    networks:
      - ecommerce_network

networks:
  ecommerce_network:
    driver: bridge

volumes:
  user-mongodb-data:
  cart-mongodb-data:
  product-mongodb-data:
  order-mongodb-data: